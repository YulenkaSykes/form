{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","text","type","error","setError","email","password","confirmPassword","formData","setFormData","className","src","alt","Button","variant","href","FormControl","value","onChange","e","target","length","includes","placeholder","map","gender","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59b6fd17.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nfunction App() {\n  const [error, setError] = useState({ text: \"\", type: \"\" });\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const emailCheck = (email) =>\n    email.length > 3 && email.includes(\"@\") && email.includes(\".\")\n      ? setError({ text: \"\", type: \"\" })\n      : setError({ type: \"email\", text: \"Email is not correct\" });\n\n  const passwordCheck = (password) =>\n    password.length >= 6\n      ? setError({ text: \"\", type: \"\" })\n      : setError({ type: \"password\", text: \"Password > 6 symbol\" });\n\n  const secondPasswordCheck = (password) =>\n    password === formData.password\n      ? setError({ text: \"\", type: \"\" })\n      : setError({ type: \"confirm\", text: \"Is not confirm\" });\n\n  const genders = [\"Male\", \"Female\", \"Other\"];\n\n  return (\n    <div className=\"App centered\">\n      <div className=\"col centered header\">\n        <img src=\"/logo.png\" alt=\"\" />\n        <h1>Sign Up with email</h1>\n      </div>\n      <div className=\"col centered buttons\">\n        <Button className=\"btn\" variant=\"success\">\n          <strong>Sing up</strong>\n        </Button>\n\n        <div className=\"allLinks col centered\">\n          <div className=\"links\">\n            Already have an account?\n            <a className=\"link\" href=\"/\">\n              &nbsp;Log In\n            </a>\n          </div>\n          <div className=\"links\">\n            Review privacy and disclosures\n            <a className=\"link\" href=\"/\">\n              &nbsp;here\n            </a>\n          </div>\n        </div>\n\n        <div className=\"col centered inputs\">\n          <span>E-mail</span>\n          <FormControl\n            value={formData.email}\n            onChange={(e) => {\n              setFormData({ ...formData, email: e.target.value });\n              emailCheck(e.target.value);\n            }}\n            className={`${\n              formData.email.length > 0\n                ? error.type === \"email\"\n                  ? \"input_red\"\n                  : \"input_green\"\n                : \"input\"\n            } input`}\n            placeholder=\"johsmith@gmail.com\"\n            aria-label=\"Normal\"\n            aria-describedby=\"basic-addon2\"\n            type=\"password\"\n          />\n          {error.type === \"email\" && (\n            <span className=\"span_color\">{error.text}</span>\n          )}\n          <span>Create Password</span>\n          <FormControl\n            value={formData.password}\n            onChange={(e) => {\n              setFormData({ ...formData, password: e.target.value });\n              passwordCheck(e.target.value);\n            }}\n            className={`${\n              formData.password.length > 0\n                ? error.type === \"password\"\n                  ? \"input_red\"\n                  : \"input_green\"\n                : \"input\"\n            } input`}\n            placeholder=\"**********\"\n            aria-label=\"Input state\"\n            aria-describedby=\"basic-addon2\"\n            type=\"password\"\n          />\n          {error.type === \"password\" && (\n            <span className=\"span_color\">{error.text}</span>\n          )}\n          <span>Confirm password</span>\n          <FormControl\n            value={formData.confirmPassword}\n            onChange={(e) => {\n              setFormData({ ...formData, confirmPassword: e.target.value });\n              secondPasswordCheck(e.target.value);\n            }}\n            className={`${\n              formData.confirmPassword.length > 0\n                ? error.type === \"confirmPassword\"\n                  ? \"input_red\"\n                  : \"input_green\"\n                : \"input\"\n            } input`}\n            placeholder=\"**********\"\n            aria-label=\"Error massage\"\n            aria-describedby=\"basic-addon2\"\n            type=\"password\"\n          />\n          {error.type === \"confirm\" && (\n            <span className=\"span_color\">{error.text}</span>\n          )}\n        </div>\n\n        <div className=\"selects_wrapper col centered\">\n          <h2>Gender</h2>\n          <div className=\"row centered selects\">\n            {genders.map((gender) => (\n              <div className=\"select centered col\">\n                <img src={`${gender}.png`} alt=\"\" />\n                <span>{gender}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}